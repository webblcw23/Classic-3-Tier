trigger:
  none
pool:
  vmImage: 'ubuntu-latest'
variables:
- name: workingDir
  value: 'Terraform/'
- name: backendKey
  value: 'movieexplorer-prod.tfstate'
- name: resourceGroup
  value: 'movie-explorer-rg'
- name: storageAccount
  value: 'lewisfuncstorage'
- name: containerName
  value: 'tfstate'
stages:
- stage: DeployInfra
  displayName: "Terraform Apply Stage"
  jobs:
  - job: ApplyInfra
    displayName: "Run Terraform Apply"
    steps:
    - task: TerraformInstaller@1
      displayName: "Install Terraform"
      inputs:
        terraformVersion: 'latest'
    - task: TerraformTaskV4@4
      displayName: "Terraform Init"
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: Terraform/
        backendServiceArm: 'ADOToSubscription'
        backendAzureRmResourceGroupName: movie-explorer-rg
        backendAzureRmStorageAccountName: lewisfuncstorage
        backendAzureRmContainerName: tfstate
        backendAzureRmKey: movieexplorer-prod.tfstate
        commandOptions: '-reconfigure -upgrade'
    - task: TerraformTaskV4@4
      displayName: "Terraform Validate"
      inputs:
        provider: 'azurerm'
        command: 'validate'
        workingDirectory: Terraform/
    - task: TerraformTaskV4@4
      displayName: "Terraform Plan"
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: Terraform/
        environmentServiceNameAzureRM: 'ADOToSubscription'
        commandOptions: >
          -var subscription_id=$(subscription_id) -var sql_admin_username=$(sql_admin_username) -var sql_admin_password=$(sql_admin_password)
    - task: TerraformTaskV4@4
      displayName: "Terraform Apply"
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: Terraform/
        environmentServiceNameAzureRM: 'ADOToSubscription'
        commandOptions: >
          -auto-approve -var subscription_id=$(subscription_id) -var sql_admin_username=$(sql_admin_username) -var sql_admin_password=$(sql_admin_password)
